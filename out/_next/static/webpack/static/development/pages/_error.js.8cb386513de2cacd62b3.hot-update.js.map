{"version":3,"file":"static/webpack/static/development/pages/_error.js.8cb386513de2cacd62b3.hot-update.js","sources":["webpack:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js","webpack:///./pages/_error.js"],"sourcesContent":["\n    (window.__NEXT_P=window.__NEXT_P||[]).push([\"/_error\", function() {\n      var page = require(\"/Users/danyaowang/SideProject/Ellen/pages/_error.js\")\n      if(module.hot) {\n        module.hot.accept(\"/Users/danyaowang/SideProject/Ellen/pages/_error.js\", function() {\n          if(!next.router.components[\"/_error\"]) return\n          var updatedPage = require(\"/Users/danyaowang/SideProject/Ellen/pages/_error.js\")\n          next.router.update(\"/_error\", updatedPage.default || updatedPage)\n        })\n      }\n      return { page: page.default || page }\n    }]);\n  ","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withTranslation } from '../i18n'\n\nconst Error = ({ statusCode, t }) => (\n  <p>\n    {statusCode\n      ? t('error-with-status', { statusCode })\n      : t('error-without-status')}\n  </p>\n)\n\nError.getInitialProps = async ({ res, err }) => {\n  let statusCode = null\n  if (res) {\n    ({ statusCode } = res)\n  } else if (err) {\n    ({ statusCode } = err)\n  }\n  return {\n    namespacesRequired: ['common'],\n    statusCode,\n  }\n}\n\nError.defaultProps = {\n  statusCode: null,\n}\n\nError.propTypes = {\n  statusCode: PropTypes.number,\n  t: PropTypes.func.isRequired,\n}\n\nexport default withTranslation('common')(Error)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAHA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA;AACA;AAFA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAYA;AACA;AADA;AAIA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;A","sourceRoot":""}