{"version":3,"file":"static/webpack/static/development/pages/contactus.js.7e8a0d8adc7c64d22e34.hot-update.js","sources":["webpack:///./pages/contactus.js"],"sourcesContent":["import Layout from '../components/layout';\nimport PropTypes from 'prop-types'\n\nimport { i18n, withTranslation } from '../i18n'\n\nconst sendMessage = () => {\n    document.getElementById('try').addEventListener(\"click\", () => {\n        var xmlHttp = new XMLHttpRequest();\n        const theUrl = \"https://api.telegram.org/bot927664956:AAEqWfwRCXoI_mnBXrwGzH5AXySoQoOVeFg/sendMessage?chat_id=@cuiziangchannel&text=name: \"\n            + document.querySelector(\"#name\").value + \"%0D%0Aemail: \"\n            + document.querySelector(\"#email\").value + \"%0D%0AphoneNumber: \"\n            + document.querySelector(\"#phone\").value + \"%0D%0Amessage: \"\n            + document.querySelector(\"#exampleFormControlTextarea1\").value;\n\n        xmlHttp.onreadystatechange = () => {\n            if (xmlHttp.readyState === 4) {\n                  callback(xmlHttp.response);\n                    if(xmlHttp.response.ok === true){\n                        alert(\"Message has been successfully sent. Please wait for the response patiently. Thanks!\")\n                    }else{\n                        alert(\"Message has not been sent at this time. Please retry it!\")\n                    }\n                }else{\n                    alert(\"Message has not been sent at this time. Please retry it!\")\n                }\n              }\n\n        xmlHttp.open(\"GET\", theUrl, true); // false for synchronous request\n        xmlHttp.send();\n\n        document.querySelector(\"#name\").value = \"\";\n        document.querySelector(\"#email\").value = \"\";\n        document.querySelector(\"#phone\").value = \"\";\n        document.querySelector(\"#exampleFormControlTextarea1\").value = \"\";\n    });\n}\n\nconst contact = ({ t }) => (\n    <Layout>\n        <div className=\"container\">\n\n            <h2 className=\"section-heading h1\">{t('contact')}</h2>\n            <h1></h1>\n            <div className=\"card\" >\n\n                <div className=\"card-body\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-4\">\n                                <h4 className='text-danger'>{t('location')}:</h4>\n                                <ul>95 Splinter Crescent, Ottawa</ul>\n                                <ul> Ontario, Canada, K2T 0H7</ul>\n                                <div id=\"map-container-google-12\" className=\"map-container-7\" style={{ height: 200 + 'px' }}>\n                                    <iframe src=\"https://maps.google.com/maps?q=Miami&t=&z=13&ie=UTF8&iwloc=&output=embed\" frameborder=\"0\"\n                                        style={{ border: 0, allowfullscreen: true }} ></iframe>\n                                </div>\n                            </div>\n                            <div className=\"col-sm-4\">\n                                <h4 className=\"text-danger\">{t('contactInfo')}</h4>\n                                <ul>{t('email')}</ul>\n                                <ul>{t('tel')}</ul>\n                                <ul>{t('wechat')}</ul>\n                                <ul>{t('qr')}</ul>\n                                <img src=\"/static/qr_code.jpeg\" className=\"d-block w-100\" height=\"300\" width=\"80\" />\n                            </div>\n                            <div className=\"col-sm-4\">\n                                <h4 className=\"text-danger\">{t('reach')}</h4>\n                                <form>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"name\">{t('Cname')}</label>\n                                        <input type=\"name\" className=\"form-control\" id=\"name\" />\n                                        <label htmlFor=\"email\">{t('Email')}</label>\n                                        <input type=\"email\" className=\"form-control\" id=\"email\" />\n                                        <label htmlFor=\"phone\">{t('phone')}</label>\n                                        <input type=\"phone\" className=\"form-control\" id=\"phone\" />\n                                        <label htmlFor=\"exampleFormControlTextarea1\">{t('message')}</label>\n                                        <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n                                    </div>\n                                    <a onClick={sendMessage} className=\"btn btn-default text-white bg-dark float-right\" id=\"try\">{t('send')}</a>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"column\">\n\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n    </Layout>\n);\n\n// axios.get(`https://api.telegram.org/bot927664956:AAEqWfwRCXoI_mnBXrwGzH5AXySoQoOVeFg/sendMessage?chat_id=@cuiziangchannel&text=123`)\n// .then(res => {\n//     console.log(res)\n// });\n\ncontact.getInitialProps = async () => ({\n    namespacesRequired: ['common'],\n})\n\ncontact.propTypes = {\n    t: PropTypes.func.isRequired,\n}\n\nexport default withTranslation('common')(contact)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9CA;AA0DA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AADA;AAIA;;;;A","sourceRoot":""}